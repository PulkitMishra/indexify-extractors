name: Publish all extractors

on:
  workflow_dispatch:

jobs:
  set-extractors-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Set matrix
        id: set-matrix
        run: |
          include=`cat extractors.json`
          include=`echo $include | tr -d '\r\n '`
          include=`echo $include | sed 's/"/\"/g'`
          echo "matrix={\"include\": $include}" >> $GITHUB_OUTPUT

  publish-extractor:
    runs-on: ubuntu-latest
    needs: set-extractors-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set-extractors-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up variables
        run: |
          module=`echo "${{ matrix.module_name }}" | sed 's/\./\//g'`
          full_dir=$(echo "${{ matrix.type }}/$module")

          dir=$(dirname $full_dir | cut -d':' -f1)
          class=$(echo $full_dir | cut -d':' -f2)
          file=$(echo $full_dir | awk -F'[:/]' '{print $(NF-1)}')

          echo $dir
          echo $class
          echo $file

          echo "DIRECTORY=$dir" >> $GITHUB_ENV
          echo "CLASS=$class" >> $GITHUB_ENV
          echo "FILE=$file" >> $GITHUB_ENV

      - name: Install extractor SDK
        run: pip install ./extractor-sdk

      - name: Package extractor
        run: |
          cd $DIRECTORY
          pip install -r requirements.txt
          indexify-extractor package --to-file extractor.dockerfile $FILE:$CLASS

      - name: Get extractor name
        run: |
          cd $DIRECTORY
          output=$(python -c "from $FILE import $CLASS as extractorclass; print(extractorclass.name)")
          echo "NAME=$output" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        run: |
          cd $DIRECTORY
          docker buildx build --platform=linux/amd64,linux/arm64/v8 --push . -t $NAME:latest -f extractor.dockerfile;
